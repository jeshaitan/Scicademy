v0.4.1  --  2016.02.23
* Support JSON modules in requireInContext
* Fix spelling of LICENSE
* Configure lint scripts

v0.4.0  --  2014.04.27
* Move out main modules from lib folder
* Validate context object in module/requireInContext
* Remove Makefile (it's cross environment package)
* Update internals to use latest versions of dependencies

v0.3.3  --  2013.08.21
* requireInContext fixes
  - Expose filename path to virtual machine
  - Fallback native modules requires to main context
  - Fallback to global on context detection only when `context === global`
* Update Travis CI configuration

v0.3.2  --  2013.08.08
* Improve context and cache handling in requireInContext
  Separeate modules cache pool for each context
* Lint cleanup
* Add missing licence file

v0.3.1  --  2012.10.11
* requireSilent: If module doesn't exist result with undefined instead of null

v0.3.0  --  2012.10.04
Moved project into (DEPRECATED) state. It's being split into several packages
* Reorganized module extensions (they will be moved into outer package)
* Updated all dependencies to it's latest versions
* Rewritten improved and moved all fs extensions into separate package (fs2)
* Removed all path extensions in most cases they've addressed invalid use cases

v0.2.14  --  2012.06.13
* Update up to v0.8 branch of es5-ext and v0.5 branch of deferred
* fs.writeFile - safe version of original writeFile, this one can be called
  many times in a row (content passed to last call will be written to file)
* fs.watchPath and fs.isIgnored (still in experimental state - confirmed to work
  on OSX only)

v0.2.13  --  2012.03.22
Fixes
* All modules should now resolve paths properly on both *nix and windows
  systems, we rely now on node's path.resolve and path.join (let's not speak of
  previously used solution).
* Removed symlink tests, for interoperability we shouldn't use symlinks in main
  code

v0.2.12  --  2012.02.10
Fixes:
* resolve returned by getRequire stopped working with Node v0.6.10 (behavior of
  internal _resolveFilename have changed)

Addons:
* fs.isExecutable - checks whether file at given path is executable (has
  execution rights for any group)

Improvements:
* readdirFilesDeep now takes additional options:
  * ignorefile - filter files by glob patterns found in files with that name
  * globignore - filter files by list of glob patterns
  * git - filter files by patterns found in .gitignore (additionally ignore
    `.git` and `.gitignore` pats)
  * pattern - Return only files that match given pattern
* All code is now cleaned up to JSLint suggestions

v0.2.11  --  2012.01.26
New version of `readdirFilesDeep` was vulnerable to loops introduced by
symlinks. Updated version doesn't follow symlinks.

v0.2.10  --  2012.01.26
Improved `readdirFilesDeep`, it's much faster now - rewritten it from promises
to callbacks style and it doesn't use fs.lstat for each file anymore

v0.2.9  --  2012.01.26
Added `readdirFiles` which returns all files in given directory

v0.2.8  --  2012.01.22
Fixed requireFirstInTree for Windows

v0.2.7  --  2012.01.22
Windows support, for everything apart child_process/pipe.js
Modules now return paths with directory separators for current environment.
Added two functions:
* path/normalize - It's same as Node.js however it always returns paths with
  separators for given environment and always strips slashes
* path/separator - Returns directory separator for current environment

v0.2.6  --  2012.01.21
New functions:
* fs/filesAtPath - Return all files at path (if path is file return itself if
  it's a directory return all files in directory)
* fs/readdirDirectory - Return list of all directories in given directory
* path/endWithSlash - Return path ended with slash

Improved:
* Use lstat instead of stat in most functions (to avoid infinite recursion with
  symbolic links)
* findPackageRoot - cache resolved root paths
* readdirFilesDeep - Do not crash on not accessible files

General:
* Updated dependencies to newest versions
* Added Travis CI Configuration

v0.2.5  --  2012.01.17
* Improved getRequire logic so it doesn't need to create temporary files in
  module path. Currently it relies on internal Node.js API.

v0.2.4  --  2011.12.22
* requireFirstInTree - method for requiring first named module found up in the
  directory tree

v0.2.3  --  2011.08.12
* findPackageRoot: Now folder that resides in 'node_modules' is accepted as
  package root, it's not that compliant with npm, but node works that way

v0.2.2  --  2011.08.11
* Fixed path.trim (it trimmed root path ('/') to empty string)
* Fixed getRequire, it now returns require as returned by node, and works in all
  node versions

v0.2.1  --  2011.08.08
* Added TAD test suite to devDependencies, configured test commands.
  Tests can be run with 'make test' or 'npm test'

v0.2.0  --  2011.08.08
New functions:
* requireSilent, getRequire, isModuleNotFoundError, requireInContext
* fs: readdirFilesDeep, copy, copySync

Improvements
* Renamed getPackageRoot into findPackageRoot
* Compatibility with es5-ext v0.6
* Test with TAD

v0.1.1  --  2011.07.11
* node engine compatibility info (package.json)

v0.1.0  --  2011.07.11
Initial version
