v0.3.40  --  2015.08.13
* Fix code resolution issue when source maps are generated, and we deal with empty file

v0.3.39  --  2015.03.20
* Fix error handling in shell script
* Improve documentation

v0.3.38  --  2015.02.17
* Support source maps in direct transforms. Fix #51
* Improve documentation

v0.3.37  --  2015.02.10
* Fix programmatical support for 'name' and 'amd' options.
* Improve documentation
* Fix spelling of License

v0.3.36  --  2014.10.15
* Implement `transform` option, that allows to run transforms for each module. Fixes #47
* Configure lint scripts

v0.3.35  --  2014.07.06
* Fix input path resolution in case of non package path. Fixes #46

v0.3.34  --  2014.06.27
* Improve input streams support. Fixes #45

v0.3.33  --  2014.05.27
* Comment out eventual shebang. We should support modules that are made executable for *nix
  environments

v0.3.32  --  2014.05.07
* Support all types and extensions in includes option (Fixes #42)

v0.3.31  --  2014.05.02
* Support input from stdin (Fixes #41)

v0.3.30  --  2014.04.28
* Move out main module from lib folder
* Update to use latest versions of dependencies
* Remove Makefile (it's environment agnostic project)

v0.3.29  --  2014.04.04
* Fix handling of not found module of outer package

v0.3.28  --  2014.03.27
* Support optional requires.
  Optional require must be wrapped in try/catch clause and on that basis it's
  distinguished.

v0.3.27  --  2014.03.06
* Fallback to environment provided `require` (if it exists), in case of import
  of not bundled package. This opens the door to execute bundles in Node.js
  environment (#36).

v0.3.26  --  2014.01.29
* Provide `module.id`. It appears it's used within some scripts. (#35)

v0.3.25  --  2013.12.04
* `useStrict` option to enfore strict mode
* Improve documentation
* Run client-side resolver in strict mode if supported

v0.3.24  --  2013.11.29
* Silence native modules require errors with `ignoreErrors` option (#32)

v0.3.23  --  2013.11.06
* Support source maps provided separately (not with the code) by extensions
* Document option output argument

v0.3.22  --  2013.11.06
* Fix sourceURL mapping when combined with extensions. Fix #30
  Great thanks to Simon Williams (@SystemParadox) for reporting the issue and
  help with sorting it out

v0.3.21  --  2013.10.28
* Make `<output>` optional in binary script. If `<output>` not provided, output
  generated bundle to stdout. Fix #29
* Improve syntax error handling
* Improve documentation

v0.3.20  --  2013.08.21
* (Critical) Fix partial path resolution issue
* Update context configuration for loadCSS test
* Update dependencies to latest versions
* Improve documentation

v0.3.19  --  2013.06.21
* CSS as native type
* HTML as native type
* Support extensions passed programmatically
* Significantly improved extensions handling and files resolution order
* Better documentation
* Fix double file read issue (minor, affected only input modules)
* Update sourceURL syntax (replace '@' with '#')
* Improve error message

v0.3.18  --  2013.06.05
* Allow asynchronous compilation of extensions
* `prettyOutput` option through which we can prevent corrected indentation of
  output. When bound to process that's a memory hog, indentation can
  noticeably slow down generation of a bundle.
* Provide information about Webassmble tool in documentation

v0.3.17  --  2013.05.20
* Provide `ignoreErrors` options, so requiring packages that pass dynamicaly
  generated paths to require calls is possible.
* Simplify internal logic with help of memoizee package

v0.3.16  --  2013.05.15
Nearly *major* update
* JSON files support
* Support for custom formats via extensions (in parallel to this update
  extensions for YAML and CoffeeScript are published).
* Improved relative module resolution so it's on pair with Node.js design
  (there were corner case where resolution result differed).
* Introduce optional caching mechanism for repeated bundle generation.
  If request file has not been modified since last read its content and
  calculated dependencies list are taken from a cache. When used, speeds up
  Webmake around x2, and even more if used with extensions.
* Improve error messages on unsupported require calls

v0.3.15  --  2013.04.08
Minor improvements:
* Meaningful error when run with unsupported Node engine
* Better error interface for Module not Found error on client-side
* Expose compilation time on returned promise object
* Improve native module require error message (so it points path to source file)

v0.3.14  --  2012.12.08
* Improve path resolution (omit findRoot call in straightforward cases)
* Fix support for partially broken circular dependencies
* Improve client-side resolution mechanism

v0.3.13  --  2012.11.09
* Expose parts of internal API for better configurability
* Demand Node v0.8 at least as we depend on fs2 (for v0.6 support use v0.3.11)

v0.3.12  --  2012.10.05
* Add 'name' and 'amd' options. Bundle can now be directly exposed
  in global (or AMD) namespace
* Update dependencies to its latest versions
* Improve documentation

v0.3.11  --  2012.07.20
* Support browser polyfills for Node.js modules. Such modules should be placed
  in node_modules folder to be picked up by Webmake
* Fix small resolution bug of "." path, it caused bundling same module twice

v0.3.10  --  2012.07.20
* Fix resolution of main path when working outside of package scope

v0.3.9  --  2012.07.02
* Fix bug related to external package resolution (affected only Node v0.8)

v0.3.8  --  2012.06.13
* Webmake function is now hybrid it accepts a callback and returns promise
* Great documentation improvements from Jaap Roes
* Update up to v0.8 branch of es5-ext and v0.5 branch of deferred
* package.json now in npm friendly format
* It's safe to use optimist at v0.3

v0.3.7  --  2012.03.22
Fixes:
* Input paths resolution now works properly in all cases (on both *nix and
  windows)
* Require paths resolution logic is now aware of current system separator type,
  this makes webmake 100% ready for both systems (*nix and windows)..
* Handling of current and parent directory index requires (e.g. './' or '../')
* Handling of paths with trailing slash (e.g. './path/') where both file
  and directory is present (e.g. ./path.js and ./path/)

v0.3.6  --  2012.02.23
* Replace rudimentary require calls parser with solid and fast solution -
  find-requires module
* Add support for sourcemaps

v0.3.5  --  2012.02.12
* Fixed resolution of paths ended with slash (client side logic didn't handle
  that properly)
* Cleanup and from now on maintain code with JSLint

v0.3.4  --  2012.01.22
* Now programmatically webmake can write output file (before it was just
  returning content)
* Byte order mark awareness
* Pack properly modules without EOL at EOF
* Better 'require' calls parser (but still primitive)
* Allow more input files via options
* More efficient parser
* Generate modules tree always in alphabetical order (diff friendly)
* Better error messages
* Support for packing programs that are not in package context
* Take out parser as separate module, thanks to that, more can be done
  programmatically
* Use '.js' in paths, without that e.g. dir 'foo' collided with 'foo.js' module
* Webmake template now safe for old JS implementations that doesn't support
  indexes on strings
* Windows support
* Travis CI Configuration

v0.3.3  --  2011.08.12
Meaningful error when requiring one of node's specific modules

v0.3.2  --  2011.08.12
Fixes, following now works:
* Require paths ending with js file extension
* Requiring modules from packages that not have main module

Maintenance:
* Update up to es5-ext@0.6.2

v0.3.1  --  2011.08.11
* Fixed links in package.json (rename aftermath)

v0.3.0  --  2011.08.11
* Rewritten whole logic with help of promises
* Packages support (!)
* webmake function now takes only input path parameter and returns source
  code as result. Shell binary still takes input and output paths as arguments
* Binary is now visible in PATH (when installed globally via npm)
* Better documentation
* Makefile
* Tests configured for TAD suite

v0.2.2  --  2011.07.20
* Renamed to webmake
* Support for modules located in upper paths than program, it didn't work (!)
* Shell (/bin) script

v0.2.1  --  2011.05.11
* Fixed assignment error
* Documentation improvements

v0.2.0  --  2011.05.05
Use widely accepted convention for error handling. Callback passed to webbuild()
will now be called with error (if any) as first argument, and result as second.

v0.1.1  --  2011.05.04
Meta data: more details in package.json

v0.1.0  --  2011.05.04
Initial version
